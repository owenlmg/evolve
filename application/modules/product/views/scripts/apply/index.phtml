<html>
<head>
<?php echo SYS_HEAD; ?>
<?php
$editable = 0;
$delable = 0;
$exportable = 1;
$reviewable = 0;

if (Application_Model_User::checkPermissionByRoleName('物料管理员') || Application_Model_User::checkPermissionByRoleName('系统管理员')) {
    $delable = 1;
    $exportable = 0;
    $editable = 1;
    $reviewable = 1;
}

$user_session = new Zend_Session_Namespace('user');
$user = $user_session->user_info['employee_id'];
?>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/function.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/comboxtree.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/createField.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/models.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/fileSelect.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/downloadFile.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/codeSelect.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/codeFileSelect.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/uploadify.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/FileView.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/common.js"></script>
<script type="text/javascript" src="<?php echo HOME_PATH ?>/public/js/jquery-1.11.1.min.js"></script>
<style type="text/css">
    .x-fieldset {
        border: 1px solid #B5B8C8;
        display: block;
    }

    .x-fieldset-none {
        border: 0;
        display: block;
        padding: 0;
    }

    .x-grid-cell.myreview {
        background-color: #9fc;
    }
    .fileQueue {
        height: 150px;
        overflow: auto;
        border: 1px solid #E5E5E5;
        margin-bottom: 2px;
    }
</style>
<script type="text/javascript">
Ext.require([
    'Ext.*'
]);
Ext.define('Ext.ux.CustomTrigger', {
    extend: 'Ext.form.field.Trigger',
    alias: 'widget.customtrigger',
    // override onTriggerClick
    onTriggerClick: function () {
        Ext.Msg.alert('Status', 'You clicked my trigger!');
    }
});

Ext.onReady(function () {
    Ext.QuickTips.init();

    // 产品系列数据模型
    Ext.define('project', {
        extend: 'Ext.data.Model',
        fields: [
            {name: "id"},
            {name: "name"}
        ]
    });
    Ext.define('materiel', {
        extend: 'Ext.data.Model',
        idProperty: 'id',
        fields: [
            {name: "id"},
            {name: "code"},
            {name: "type"},
            {name: "description"},
            {name: "name"},
            {name: "remark"},
            {name: "ver"},
            {name: "unit"},
            {name: "state"},
            {name: "manufacturers"},
            {name: "supply1"},
            {name: "supply2"},
            {name: "mpq"},
            {name: "moq"},
            {name: "tod"},
            {name: "supply_code1"},
            {name: "supply_cname1"},
            {name: "supply_ename1"},
            {name: "supply_code2"},
            {name: "supply_cname2"},
            {name: "supply_ename2"},
            {name: "type_name"},
            {name: "unit_name"},
            {name: "creater"},
            {name: "create_time", type: 'date', dateFormat: 'timestamp'},
            {name: "archive_time", type: 'date', dateFormat: 'timestamp'},
            {name: "step_name"},
            {name: "review_state"},
            {name: "mytype"},
            {name: "auto"},
            {name: "data_file"},
            {name: "data_file_path"},
            {name: "data_file_id"},
            {name: "first_report"},
            {name: "first_report_path"},
            {name: "first_report_id"},
            {name: "tsr"},
            {name: "tsr_path"},
            {name: "tsr_id"},
            {name: "record"},
            {name: "example"},
            {name: "project_no"},
            {name: "project_name"},
            {name: "eccn"}
        ]
    });
    Ext.define('bpartner', {
        extend: 'Ext.data.Model',
        idProperty: 'id',
        fields: [
            {name: "id"},
            {name: "text"}
        ]
    });
    Ext.define('codemaster', {
        extend: 'Ext.data.Model',
        idProperty: 'id',
        fields: [
            {name: "id"},
            {name: "code"},
            {name: 'text'}
        ]
    });

    var personal = "<?php if (isset($_GET['personal'])) echo 3 ?>";
    var store = Ext.create('Ext.data.Store', {
        pageSize: 100,
        model: 'materiel',
        proxy: {
            type: 'ajax',
            reader: {
                root: 'topics',
                totalProperty: 'totalCount'
            },
            url: '<?php echo HOME_PATH; ?>/public/product/apply/getlist/mytype/' + personal
        },
        autoLoad: true
    });

    var supplyStore = Ext.create('Ext.data.Store', {
        model: 'bpartner',
        proxy: {
            type: 'ajax',
            reader: 'json',
            url: '<?php echo HOME_PATH; ?>/public/product/apply/getsupply'
        },
        autoLoad: true
    });

    var codemasterStore = Ext.create('Ext.data.Store', {
        model: 'codemaster',
        proxy: {
            type: 'ajax',
            reader: 'json',
            url: '<?php echo HOME_PATH; ?>/public/product/apply/getunit'
        },
        autoLoad: true
    });

    var treeStore = Ext.create('Ext.data.TreeStore', {
        fields: ['id', 'text', 'parent_id', 'auto'],
        proxy: {
            type: 'ajax',
            url: '<?php echo HOME_PATH; ?>/public/product/type/gettypetree',
            actionMethods: 'post'
        },
        sorters: [
            {
                property: 'leaf',
                direction: 'ASC'
            },
            {
                property: 'text',
                direction: 'ASC'
            }
        ]
    });

    var uploadStore = Ext.create('Ext.data.Store', {
        model: 'upload',
        proxy: {
            type: 'ajax',
            reader: 'json',
            url: getRootPath() + '/public/dcc/upload/getfiles/type/1'
        },
        autoLoad: false
    });
    var employeeTreeStore = Ext.create('Ext.data.TreeStore', {
        proxy: {
            type: 'ajax',
            url: '<?php echo HOME_PATH; ?>/public/dcc/upload/gettree',
            actionMethods: 'post'
        },
        sorters: [
            {
                property: 'leaf',
                direction: 'ASC'
            },
            {
                property: 'text',
                direction: 'ASC'
            }
        ]
    });

    // 产品系列数据源
    var projectStore = Ext.create('Ext.data.Store', {
        model: 'project',
        proxy: {
            type: 'ajax',
            reader: 'json',
            url: '<?php echo HOME_PATH; ?>/public/dcc/code/getproject'
        },
        autoLoad: true
    });

    var rowEditing = Ext.create('Ext.grid.plugin.CellEditing', {
        clicksToEdit: 1
    });

    var required = '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>';
    var notrequired = '<span></span>';

    var form = new Ext.form.Panel({
        width: 600,
        bodyPadding: 2,
        layout: 'form',
        waitMsgTarget: true,
        fieldDefaults: {
            labelAlign: 'right',
            labelWidth: 95,
            msgTarget: 'side'
        },
        items: [
            {
                layout: 'column', //第一行
                border: 0,
                items: [
                    {
                        xtype: 'textfield',
                        id: 'id',
                        name: 'id',
                        hidden: true
                    },
                    {
                        xtype: 'textfield',
                        id: 'ismanager',
                        name: 'ismanager',
                        value: '0',
                        hidden: true
                    },
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [new Ext.create("Ext.ux.comboboxtree", {
                            fieldLabel: '物料类别',
                            name: 'type',
                            id: 'type',
                            hiddenName: 'type_id',
                            afterLabelTextTpl: required,
                            allowBlank: false,
                            labelWidth: 95,
                            editable: false,
                            store: treeStore,
                            cascade: 'child', //级联方式:1.child子级联;2.parent,父级联,3,both全部级联
                            checkModel: 'double', //当json数据为不带checked的数据时只配置为single,带checked配置为double为单选,不配置为多选
                            onlyLeaf: true, //是否只选择叶子节点
                            displayField: 'text',
                            valueField: 'id',
                            rootId: '0',
                            rootText: 'DRP',
                            treeNodeParameter: '',
                            listeners: {
                                change: function (obj, newValue, oldValue, e) {
                                    // 编码方式为“按产品型号编码”时显示产品型号，为“申请人填写”时，显示物料代码输入框
                                    var auto = 0;
                                    if (Ext.getCmp('type_id').getValue()) {
                                        var node = treeStore.getNodeById(Ext.getCmp('type_id').getValue());
                                        if (node) {
                                            auto = node.get('auto');
                                        }
                                    }

                                    // 内部型号
                                    var proj = Ext.getCmp("project_no");
                                    if (newValue == '产成品' || auto == 2) {
                                        proj.show();
                                        proj.allowBlank = false;
                                    } else {
                                        proj.hide();
                                        proj.allowBlank = true;
                                    }
                                    var code = Ext.getCmp("mcode");
                                    if (auto == 3) {
                                        code.show();
                                        code.allowBlank = false;
                                    } else {
                                        code.hide();
                                        code.allowBlank = true;
                                    }
                                    if (newValue && Ext.getCmp('type_id').getValue())
                                        Ext.Ajax.request({
                                            url: '<?php echo HOME_PATH; ?>/public/product/type/getexample',
                                            params: {type: Ext.getCmp('type_id').getValue()},
                                            method: 'POST',
                                            success: function (response, options) {
                                                var data = Ext.JSON.decode(response.responseText);
                                                if (data.success) {
                                                    Ext.getCmp('example').setValue(data.info.example);

                                                    // 文件属性
                                                    /*var datafile = Ext.getCmp('data_file');
                                                     var first_report = Ext.getCmp('first_report');
                                                     var tsr = Ext.getCmp('tsr');
                                                     if(data.info.datafile_flg) {
                                                     datafile.allowBlank = false;
                                                     datafile.afterLabelTextTpl = required;
                                                     } else {
                                                     datafile.allowBlank = true;
                                                     datafile.afterLabelTextTpl = notrequired;
                                                     }
                                                     if(data.info.checkreport_flg) {
                                                     first_report.allowBlank = false;
                                                     first_report.afterLabelTextTpl = required;
                                                     } else {
                                                     first_report.allowBlank = true;
                                                     first_report.afterLabelTextTpl = notrequired;
                                                     }
                                                     if(data.info.tsr_flg) {
                                                     tsr.allowBlank = false;
                                                     tsr.afterLabelTextTpl = required;
                                                     } else {
                                                     tsr.allowBlank = true;
                                                     tsr.afterLabelTextTpl = notrequired;
                                                     }*/
                                                } else {
                                                    Ext.getCmp('example').setValue("");
                                                }
                                            },
                                            failure: function (form, action) {
                                                Ext.MessageBox.alert('错误', action.result.info);
                                            }
                                        });
                                }
                            }
                        }), {
                            xtype: 'textfield',
                            id: 'type_id',
                            name: 'type_id',
                            hidden: true
                        }]
                    },
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [
                            {
                                xtype: 'textfield',
                                id: 'tsr_id',
                                name: 'tsr_id',
                                hidden: true
                            },
                            {
                                xtype: 'triggerfield',
                                fieldLabel: 'TSR',
                                id: 'tsr',
                                editable: false,
                                name: 'tsr',
                                width: 100,
                                triggerCls: 'x-form-search-trigger',
                                onTriggerClick: function () {
                                    // 文件选择
                                    uploadStore.load({params: {search_archive: 0, search_del: 0}});
                                    var fileSelect = lib.dcc.FileSelect({store: uploadStore, returnId: 'tsr_id', returnValue: 'tsr', grid: null, userid: <?php echo $user?>});
                                    fileSelect.show();
                                }
                            }
                        ]
                    }
                ]
            },
            {
                layout: 'column', //第二行
                border: 0,
                items: [
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [
                            {
                                xtype: 'textfield',
                                id: 'data_file_id',
                                name: 'data_file_id',
                                hidden: true
                            },
                            {
                                xtype: 'triggerfield',
                                fieldLabel: '数据手册',
                                id: 'data_file',
                                editable: false,
                                name: 'data_file',
                                width: 100,
                                triggerCls: 'x-form-search-trigger',
                                onTriggerClick: function () {
                                    // 文件选择
                                    uploadStore.load({params: {search_archive: 0, search_del: 0}});
                                    var fileSelect = lib.dcc.FileSelect({store: uploadStore, returnId: 'data_file_id', returnValue: 'data_file', grid: null, userid: <?php echo $user?>});
                                    fileSelect.show();
                                }
                            }
                        ]
                    },
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [
                            {
                                xtype: 'textfield',
                                id: 'first_report_id',
                                name: 'first_report_id',
                                hidden: true
                            },
                            {
                                xtype: 'triggerfield',
                                fieldLabel: '样品检验报告',
                                id: 'first_report',
                                editable: false,
                                name: 'first_report',
                                width: 100,
                                triggerCls: 'x-form-search-trigger',
                                onTriggerClick: function () {
                                    // 文件选择
                                    uploadStore.load({params: {search_archive: 0, search_del: 0}});
                                    var fileSelect = lib.dcc.FileSelect({store: uploadStore, returnId: 'first_report_id', returnValue: 'first_report', grid: null, userid: <?php echo $user?>});
                                    fileSelect.show();
                                }
                            }
                        ]
                    }
                ]
            },
            {
                layout: 'column', //第二行
                border: 0,
                items: [
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [
                            {
                                xtype: 'textfield',
                                fieldLabel: '物料名称',
                                allowBlank: false,
                                afterLabelTextTpl: required,
                                rows: 2,
                                id: 'name',
                                name: 'name'
                            }
                        ]
                    },
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [
                            {
                                xtype: 'combobox',
                                fieldLabel: '产品型号',
                                flex: 2,
                                hidden: true,
                                id: 'project_no',
                                name: 'project_no',
                                displayField: 'name',
                                valueField: 'id',
                                triggerAction: 'all',
                                typeAhead: true,
                                forceSelection: true,
                                selectOnFocus: true,
                                emptyText: '无',
                                lazyRender: true,
                                store: projectStore,
                                queryMode: 'local'
                            }
                        ]
                    }
                ]
            },
            {
                layout: 'column', //第二行
                border: 0,
                items: [
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [
                            {
                                xtype: 'textfield',
                                fieldLabel: '物料代码',
                                allowBlank: false,
                                hidden: true,
                                afterLabelTextTpl: required,
                                id: 'mcode',
                                name: 'mcode'
                            }
                        ]
                    }
                ]
            },
            {
                layout: 'column', //第二行
                border: 0,
                items: [
                    {
                        xtype: 'textfield',
                        id: 'state_old',
                        name: 'state_old',
                        hidden: true
                    },
                    {
                        columnWidth: .5,
                        border: 0,
                        layout: 'form',
                        items: [
                            {
                                fieldLabel: '状态',
                                xtype: "combo",
                                name: 'state',
                                id: 'state',
                                hidden: true,
                                editable: false,
                                store: [
                                    ['Reviewing', ' 审核中'],
                                    ['Return', '退回'],
                                    ['APL', ' APL'],
                                    ['Active', 'Active'],
                                    ['Preliminary', 'Preliminary'],
                                    ['Pre-Obsolete', 'Pre-Obsolete'],
                                    ['Obsolete', 'Obsolete']
                                ],
                                forceSelection: true,
                                selectOnFocus: true,
                                typeAhead: true,
                                triggerAction: 'all',
                                emptyText: '请选择...',
                                mode: 'local',
                                listeners: {
                                    change: function (obj, newValue, oldValue, eOpts) {
                                        if (oldValue && newValue == 'Return' && (Ext.getCmp('state_old').getValue() != 'Reviewing' && Ext.getCmp('state_old').getValue() != 'Return')) {
                                            Ext.MessageBox.alert('错误', "只能退回审核中的物料");
                                            Ext.getCmp('state').setValue(oldValue);
                                            return false;
                                        }
                                    }
                                }

                            }
                        ]
                    }
                ]
            },
            {
                layout: 'form', // 第四行
                border: 0,
                items: [
                    {
                        xtype: 'textarea',
                        fieldLabel: '物料描述',
                        allowBlank: false,
                        maxLength: 150,
                        afterLabelTextTpl: required,
                        rows: 2,
                        id: 'description',
                        name: 'description',
                        listeners: {
                            change: function (o) {
                                if (o && o.value) {
                                    var remain = 150 - o.value.length;
                                    if (remain >= 0) {
                                        Ext.getCmp("remain").setValue("还可输入<b>" + remain + "</b>字");
                                    } else {
                                        Ext.getCmp("remain").setValue("<font color='red'>输入已超过150字</font>");
                                    }
                                } else {
                                    Ext.getCmp("remain").setValue("");
                                }
                            }
                        }
                    },
                    {
                        xtype: 'displayfield',
                        fieldLabel: ' ',
                        labelSeparator: "",
                        hiddenLabel: true,
                        id: 'remain',
                        name: 'remain',
                        value: ''
                    },
                    {
                        xtype: 'textfield',
                        fieldLabel: 'ECCN',
                        id: 'eccn',
                        name: 'eccn'
                    },
                    {
                        xtype: 'displayfield',
                        fieldLabel: ' ',
                        labelSeparator: "",
                        hiddenLabel: true,
                        id: 'markx',
                        name: 'markx',
                        value: ''
                    },
                    {
                        xtype: 'textarea',
                        fieldLabel: '备注',
                        rows: 2,
                        name: 'remark'
                    },
                    {
                        xtype: 'displayfield',
                        fieldLabel: '描述规则(举例)',
                        rows: 2,
                        id: 'example',
                        name: 'example'
                    },
                    {
                        xtype: 'displayfield',
                        fieldStyle: 'color:red;',
                        fieldLabel: '说明',
                        value: '在物料名称和物料描述中请不要使用<b>英文逗号</b>和<b>引号</b>'
                    }
                ]
            }
        ]
    });


    // 转审
    var trans = {
            xtype : 'employeebobox',
            fieldLabel: '转审给',
            itemId: 'transfer',
            id: 'transfer',
            name: 'transfer',
            width: 460,
            hidden: true,
            allowBlank: false
        };

    var reviewForm = new Ext.form.Panel({
        width: 400,
        border: 0,
        bodyPadding: 2,
        layout: 'form',
        waitMsgTarget: true,
        fieldDefaults: {
            labelAlign: 'right',
            labelWidth: 95,
            msgTarget: 'side'
        },
        items: [
            {
                xtype: 'textfield',
                name: 'id',
                hidden: true
            },
            {
                xtype: 'textfield',
                id: 'ids',
                name: 'ids',
                hidden: true
            },
            {
                xtype: 'textfield',
                name: 'final',
                id: 'final',
                value: 0,
                hidden: true
            },
            {
                xtype: 'textfield',
                name: 'transfer_id',
                id: 'transfer_id',
                hidden: true
            },
            {
                xtype: 'radiogroup',
                fieldLabel: '审批结果',
                allowBlank: false,
                cls: 'x-check-group-alt',
                width: 300,
                items: [
                    {boxLabel: '批准', name: 'review_result', inputValue: 1},
                    {boxLabel: '拒绝', name: 'review_result', inputValue: 2},
                    {boxLabel: '转审', name: 'review_result', inputValue: 3}
                ],
                listeners: {
                    change: function (obj, newValue, oldValue, e) {
                        var transfer = Ext.getCmp('transfer');
                        var code = Ext.getCmp('code');
                        if (newValue.review_result === 3) {
                            transfer.setVisible(true);
                            transfer.setDisabled(false);
                            code.setVisible(false);
                            code.setDisabled(true);
                        } else {
                            transfer.setVisible(false);
                            transfer.setDisabled(true);
                            if (Ext.getCmp('final').getValue() == 1 && newValue.review_result === 1) {
                                code.setVisible(true);
                                code.setDisabled(false);
                            } else {
                                code.setVisible(false);
                                code.setDisabled(true);
                            }

                        }
                    }
                }
            },
            trans,
            {
                xtype: 'textfield',
                fieldLabel: '物料编码',
                allowBlank: false,
                hidden: true,
                id: 'code',
                name: 'code'
            },
            {
                xtype: 'textarea',
                fieldLabel: '备注',
                rows: 2,
                name: 'remark1'
            }
        ]
    });

    var win = new Ext.Window({
        xtype: "window",
        title: '编码申请',
        border: 0,
        modal: true,
        layout: 'fit',
        closeAction: 'hide',
        items: [form],
        buttons: [
            {
                text: '提交',
                formBind: true,
                handler: function () {
                    var window = this.up('window');
                    var form = window.down('form').getForm();
                    if (form.isValid()) {
                        form.submit({
                            clientValidation: true,
                            url: '<?php echo HOME_PATH; ?>/public/product/apply/save',
                            submitEmptyText: false,
                            waitMsg: '提交中，请稍后...',
                            method: 'POST',
                            success: function (form, action) {
                                Ext.MessageBox.alert('提示', action.result.info);
                                if (action.result.success) {
                                    store.reload();
                                    form.reset();
                                    window.hide();
                                } else {
                                    Ext.MessageBox.alert('错误', action.result.info);
                                }
                            },
                            failure: function (form, action) {
                                Ext.MessageBox.alert('错误', action.result.info);
                            }
                        });
                    }
                }
            },
            {
                text: '取消',
                handler: function () {
                    var window = this.up('window');
                    window.down('form').getForm().reset();
                    win.hide();
                }
            }
        ]
    });

    var reviewWin = new Ext.Window({
        xtype: "window",
        title: '编码审批',
        modal: true,
        layout: 'fit',
        closeAction: 'hide',
        items: [reviewForm],
        buttons: [
            {
                text: '提交',
                formBind: true,
                handler: function () {
                    var thisForm = reviewForm;
                    var form = thisForm.getForm();
                    if (form.isValid()) {
                        form.submit({
                            submitEmptyText: false,
                            url: '<?php echo HOME_PATH; ?>/public/product/apply/review/',
                            waitMsg: '提交中，请稍后...',
                            timeout: 300000,
                            params: {review_id: form.getRecord().get('review_id')},
                            success: function (form, action) {
                                if (action.result.success) {
                                    Ext.MessageBox.alert('提示', action.result.info);

                                    store.reload();
                                    form.reset();
                                    reviewWin.hide();
                                } else {
                                    Ext.MessageBox.alert('错误', action.result.info);
                                }
                            },
                            failure: function (form, action) {
                                Ext.MessageBox.alert('错误', action.result.info);
                            }
                        });
                    }
                }
            },
            {
                text: '取消',
                handler: function () {
                    reviewWin.hide();
                }
            }
        ]
    });

    var grid = Ext.create('Ext.grid.Panel', {
        store: store,
        border: 0,
        selType: 'checkboxmodel',
        columnLines: true,
        viewConfig: {
            stripeRows: false
        },
        tbar: [
            {
                xtype: 'textfield',
                id: 'search_tag',
                width: 200,
                emptyText: '模糊查询，多个关键字以空格隔开',
                listeners: {
                    specialKey: function (field, e) {
                        if (e.getKey() == Ext.EventObject.ENTER) {
                            store.loadPage(1);
                        }
                    }
                }
            },
            {
                xtype: 'textfield',
                hidden: true,
                id: 'search_type',
                width: 120
            },
            new Ext.create("Ext.ux.comboboxtree", {
                name: 'searchbar_type',
                id: 'searchbar_type',
                hiddenName: 'search_type',
                emptyText: '物料类别',
                allowBlank: false,
                labelWidth: 95,
                editable: false,
                store: treeStore,
                cascade: 'child', //级联方式:1.child子级联;2.parent,父级联,3,both全部级联
                //checkModel: 'double', //当json数据为不带checked的数据时只配置为single,带checked配置为double为单选,不配置为多选
                onlyLeaf: true, //是否只选择叶子节点
                displayField: 'text',
                valueField: 'id',
                rootId: '0',
                rootText: 'DRP',
                treeNodeParameter: ''
            }),
            {
                xtype: 'datefield',
                format: 'Y-m-d',
                width: 100,
                id: 'search_archive_date_from',
                emptyText: '归档日期从...'
            },
            {
                xtype: 'datefield',
                format: 'Y-m-j',
                width: 100,
                id: 'search_archive_date_to',
                emptyText: '归档日期至...'
            },
            {
                xtype: 'combobox',
                id: 'search_state',
                emptyText: '状态...',
                width: 100,
                store: [
                    ['Active', '已归档'],
                    ['Obsolete', '作废'],
                    ['Return', '退回'],
                    ['Reviewing', '审核中']
                ]
            },
            {
                xtype: 'splitbutton',
                text: '查询',
                iconCls: 'icon-search',
                handler: function () {
                    var search_tag = Ext.getCmp('search_tag').getValue();
                    var search_type = Ext.getCmp('search_type').getValue();
                    var search_state = Ext.getCmp('search_state').getValue();
                    var search_archive_date_from = Ext.getCmp('search_archive_date_from').getValue();
                    var search_archive_date_to = Ext.getCmp('search_archive_date_to').getValue();
                    store.baseParams = {
                        search_type: search_type,
                        search_tag: search_tag,
                        search_state: search_state,
                        search_archive_date_from: search_archive_date_from,
                        search_archive_date_to: search_archive_date_to
                    }
                    store.loadPage(1);
                },
                menu: [
                    {
                        text: '导出',
                        disabled: <?php echo $exportable ?>,
                        iconCls: 'icon-export',
                        handler: function () {
                            var search_tag = Ext.getCmp('search_tag').getValue();
                            var search_type = Ext.getCmp('search_type').getValue();
                            var search_state = Ext.getCmp('search_state').getValue();
                            var search_archive_date_from = Ext.getCmp('search_archive_date_from').getValue();
                            var search_archive_date_to = Ext.getCmp('search_archive_date_to').getValue();
                            if (!search_tag && !search_state && !search_archive_date_from && !search_archive_date_to) {
                                Ext.MessageBox.alert('请注意', '请先输入查询条件！');
                                return false;
                            }

                            Ext.Msg.wait('加载中，请稍后...', '提示');
                            Ext.Ajax.request({
                                url: '<?php echo HOME_PATH; ?>/public/product/list/exportcsv',
                                params: {
                                    search_type: search_type,
                                    search_tag: search_tag,
                                    search_state: search_state,
                                    search_archive_date_from: search_archive_date_from,
                                    search_archive_date_to: search_archive_date_to,
                                    source: 'apply'
                                },
                                method: 'POST',
                                success: function (response, options) {
                                    var url = '<?php echo HOME_PATH; ?>/public/dcc/download/downcsv/path/' + response.responseText;
                                    Ext.Msg.hide();
                                    window.open(url);
                                }
                            });
                        }
                    }
                ]
            },
            {
                text: '申请编码',
                iconCls: 'icon-add',
                scope: this,
                handler: function () {
                    treeStore.load();
                    Ext.getCmp("state").hide();
                    Ext.getCmp("ismanager").setValue("0");
                    win.setTitle("物料编码申请");
                    Ext.getCmp("name").allowBlank = false;
                    Ext.getCmp("description").allowBlank = false;
                    win.show();
                }
            },
            {
                text: '编辑',
                iconCls: 'icon-edit',
                scope: this,
                handler: function () {
                    var selection = grid.getView().getSelectionModel().getSelection();
                    if (selection.length <= 0) {
                        Ext.MessageBox.alert('请注意', '请您选择要编辑的记录！');
                        return false;
                    } else if (selection.length >= 2) {
                        Ext.MessageBox.alert('请注意', '不能同时编辑多个数据！');
                        return false;
                    }

                    var editable = <?php echo $editable ?>;


                    var record = selection[0];
                    if (record.get('state') !== 'Return' && !editable) {
                        Ext.MessageBox.alert('请注意', '您没有权限编辑此记录！');
                    } else if (("" + record.get('mytype')).indexOf('1') === -1 && !editable) {
                        Ext.MessageBox.alert('请注意', '您没有权限编辑此记录！');
                    } else {
                        win.setTitle("物料编码编辑");
                        if (record.get('state') == 'Return' && ("" + record.get('mytype')).indexOf('1') !== -1) {
                            var record = selection[0];
                            treeStore.load();

                            form.getForm().reset();
                            form.getForm().loadRecord(record);
                            Ext.getCmp("type_id").setValue(record.data.type);
                            var type = record.data.type_name;
                            type = type.replace("<b>", "");
                            type = type.replace("</b>", "");
                            type = type.replace("&gt;", ">");
                            Ext.getCmp("type").setValue(type);

                            Ext.getCmp("state").hide();
                            Ext.getCmp("ismanager").setValue("0");
                            // 非管理员必填必填项
                            Ext.getCmp("name").allowBlank = false;
                            Ext.getCmp("description").allowBlank = false;
                            win.show();
                        } else {
                            var record = selection[0];
                            treeStore.load();

                            form.getForm().reset();
                            form.getForm().loadRecord(record);

                            Ext.getCmp('state_old').setValue(record.data.state);
                            Ext.getCmp("type_id").setValue(record.data.type);
                            var type = record.data.type_name;
                            type = type.replace("<b>", "");
                            type = type.replace("</b>", "");
                            type = type.replace("&gt;", ">");
                            Ext.getCmp("type").setValue(type);

                            Ext.getCmp("state").show();
                            Ext.getCmp("state").setValue(record.data.state);
                            Ext.getCmp("ismanager").setValue("1");

                            // 管理员可以不填必填项
                            Ext.getCmp("name").allowBlank = true;
                            Ext.getCmp("description").allowBlank = true;
                            win.show();
                        }
                    }
                }
            },
            {
                text: '删除',
                iconCls: 'icon-delete',
                scope: this,
                handler: function () {
                    var selection = grid.getView().getSelectionModel().getSelection();
                    if (selection.length > 0) {
                        var delable = <?php echo $delable; ?>;
                        // 检查是否有数据不能删除
                        for (var i = 0; i < selection.length; i++) {
                            var record = selection[i];
                            if ((("" + record.get('mytype')).indexOf('1') === -1 && !delable) || (record.get('state') !== 'Return' && record.get('state') !== 'Obsolete')) {
                                Ext.MessageBox.alert('请注意', 'ID:' + record.data.id + '的数据不能删除！');
                                return;
                            }
                        }

                        // 格式正确则提交修改数据
                        Ext.MessageBox.confirm('确认', '确定删除所选内容？', function (button, text) {
                            if (button == 'yes') {
                                store.remove(selection);
                                var deleteRecords = store.getRemovedRecords();
                                var changeRows = {
                                    deleted: []
                                }

                                for (var i = 0; i < deleteRecords.length; i++) {
                                    changeRows.deleted.push(deleteRecords[i].data)
                                }

                                var json = Ext.JSON.encode(changeRows);
                                Ext.Msg.wait('提交中，请稍后...', '提示');
                                Ext.Ajax.request({
                                    url: '<?php echo HOME_PATH; ?>/public/product/apply/remove',
                                    params: {json: json},
                                    method: 'POST',
                                    success: function (response, options) {
                                        var data = Ext.JSON.decode(response.responseText);
                                        if (data.success) {
                                            Ext.MessageBox.alert('提示', data.info);
                                            store.reload();
                                        } else {
                                            Ext.MessageBox.alert('错误', data.info);
                                        }
                                    },
                                    failure: function (form, action) {
                                        Ext.MessageBox.alert('错误', action.result.info);
                                    }
                                });
                            }
                        });
                    } else {
                        Ext.MessageBox.alert('错误', '没有选择删除对象！');
                    }
                }
            },
            {
                text: '审批',
                iconCls: 'icon-accept',
                scope: this,
                handler: function () {
                    var selection = grid.getView().getSelectionModel().getSelection();
                    if (selection.length <= 0) {
                        Ext.MessageBox.alert('请注意', '请选择要审批的记录！');
                        return false;
                    }
                    var reviewable = <?php echo $reviewable; ?>;
                    var ids = '';
                    for (var i = 0; i < selection.length; i++) {
                        var record = selection[i];
                        var index = record.index + 1;
                        if (record.get('state') !== 'Reviewing') {
                            Ext.MessageBox.alert('请注意', '序号：' + index + '的数据不在审核中！');
                            return false;
                        } else if (!reviewable && ("" + record.get('mytype')).indexOf('3') === -1) {
                            Ext.MessageBox.alert('请注意', '序号：' + index + '的数据您没有权限审批！');
                            return false;
                        } else if (record.data.auto == 4 && selection.length > 1) {
                            Ext.MessageBox.alert('请注意', '序号：' + index + '的数据需要手动编码，不能同时审批多个！');
                            return false;
                        }
                        if (ids) ids += ",";
                        ids += record.data.id;
                    }
                    reviewForm.getForm().reset();
                    reviewForm.getForm().loadRecord(record);
                    Ext.getCmp("ids").setValue(ids);
                    var code = Ext.getCmp('code');
                    code.setVisible(false);
                    code.setDisabled(true);

                    if (record.data.auto != 4) {
                        reviewWin.show();
                    } else {
                        // 检查是否最后审核，如果是，增加物料编码
                        Ext.Msg.wait('加载中，请稍后...', '提示');
                        Ext.Ajax.request({
                            url: '<?php echo HOME_PATH; ?>/public/product/apply/checkfinish',
                            params: {id: record.data.id},
                            sync: false,
                            timeout: 3000000,
                            method: 'POST',
                            success: function (response, options) {
                                var data = Ext.JSON.decode(response.responseText);
                                if (data.result) {
                                    code.setVisible(true);
                                    code.setDisabled(false);
                                    if(record.data.auto == 2 && record.data.project_name) {
                                        code.setValue(record.data.project_name);
                                    }
                                    Ext.getCmp('final').setValue(1);
                                }
                                // 显示界面
                                Ext.Msg.hide();
                                reviewWin.show();
                            },
                            failure: function (form, action) {
                                Ext.MessageBox.alert('错误', "数据加载失败");
                            }
                        });
                    }
                }
            },
            {
                text: '类别管理',
                iconCls: 'icon-form-edit',
                scope: this,
                hidden: true,
                handler: function () {
                    Ext.create('Ext.window.Window', {
                        title: '物料类别管理',
                        height: 400,
                        width: 1000,
                        layout: 'fit',
                        html: "<iframe src='<?php echo HOME_PATH; ?>/public/product/type' frameborder=0 width=100% height=100%></iframe>"
                    }).show();
                }
            }
        ],
        plugins: rowEditing,
        columns: [
            {
                text: 'ID',
                width: 40,
                hidden: true,
                locked: true,
                dataIndex: 'id'
            },
            {
                xtype: 'rownumberer'
            },
            {
                text: '物料代码',
                width: 160,
                sortable: true,
                dataIndex: 'code'
            },
            {
                text: '物料名称',
                width: 160,
                dataIndex: 'name',
                renderer: showTitle
            },
            {
                text: '物料描述',
                width: 300,
                dataIndex: 'description',
                renderer: showTitle
            },
            {
                text: '物料类别',
                width: 160,
                dataIndex: 'type_name',
                renderer: showTitle
            },
            {
                text: '状态',
                width: 80,
                dataIndex: 'state',
                renderer: function (value) {
                    if (value == 'Reviewing')
                        return '审核中';
                    else if (value == 'Return')
                        return '退回';
                    else
                        return value;
                }
            },
            {
                text: '审核阶段',
                width: 200,
                dataIndex: 'step_name',
                renderer: showTitle
            },
            {
                text: '审核情况',
                width: 120,
                dataIndex: 'review_state',
                renderer: function (value, p, record) {
                    if (String(record.get('mytype')).indexOf('3') !== -1) {
                        p.css = "myreview";
                    }
                    var tip = value.replace(/,/g, '<br />');
                    p.tdAttr = 'data-qtip="' + tip + '"';
                    return value;
                }
            },
            {
                text: '产品型号',
                width: 100,
                dataIndex: 'project_name',
                renderer: showTitle
            },
            {
                text: '版本',
                width: 50,
                dataIndex: 'ver'
            },
            {
                text: '单位',
                width: 50,
                dataIndex: 'unit_name'
            },
            {
                text: '产品型号',
                width: 140,
                hidden: true,
                dataIndex: 'project_name',
                renderer: showTitle
            },
            {
                text: '供应商1',
                width: 180,
                dataIndex: 'supply1',
                renderer: function (val, p, record) {
                    var v = "";
                    if (record.data.supply_code2)
                        v = record.data.supply_code2;
                    if (record.data.supply_cname1)
                        v += record.data.supply_cname1;
                    else if (record.data.supply_ename1)
                        v += record.data.supply_ename1
                    return v;
                }
            },
            {
                text: '供应商2',
                width: 180,
                dataIndex: 'supply2',
                renderer: function (val, p, record) {
                    var v = "";
                    if (record.data.supply_code2)
                        v = record.data.supply_code2;
                    if (record.data.supply_cname2)
                        v += record.data.supply_cname2;
                    else if (record.data.supply_ename2)
                        v += record.data.supply_ename2;
                    return v;
                }
            },
            {
                text: 'ECCN',
                width: 100,
                dataIndex: 'eccn',
                renderer: showTitle
            },
            {
                text: '制造商',
                width: 180,
                dataIndex: 'manufacturers',
                renderer: showTitle
            },
            {
                text: 'MPQ',
                width: 70,
                dataIndex: 'mpq'
            },
            {
                text: 'MOQ',
                width: 70,
                dataIndex: 'moq'
            },
            {
                text: '标准货期',
                width: 80,
                dataIndex: 'tod'
            },
            {
                text: '数据手册',
                width: 180,
                dataIndex: 'data_file',
                renderer: function (val, p, record) {
                    if (!val)
                        return "";
                    var tip = val.replace(/,/g, '<br />');
                    p.tdAttr = 'data-qtip="' + tip + '"';
                    var id = record.data.data_file_id;
                    icon = "";
                    if (record.data.data_file_path) {
                        icon += '<img src="<?php echo HOME_PATH; ?>/public/images/icons/download.png" onclick="download(' + id + ', \'物料清单\')" style="cursor:pointer;"></img>';
                    }
                    return icon + " " + val;
                }
            },
            {
                text: 'TSR',
                width: 180,
                dataIndex: 'tsr',
                renderer: function (val, p, record) {
                    if (!val)
                        return "";
                    var tip = val.replace(/,/g, '<br />');
                    p.tdAttr = 'data-qtip="' + tip + '"';
                    var id = record.data.tsr_id;
                    icon = "";
                    if (record.data.tsr_path) {
                        icon += '<img src="<?php echo HOME_PATH; ?>/public/images/icons/download.png" onclick="download(' + id + ', \'物料清单\')" style="cursor:pointer;"></img>';
                    }
                    return icon + " " + val;
                }
            },
            {
                text: '首件检验报告',
                width: 180,
                dataIndex: 'first_report',
                renderer: function (val, p, record) {
                    if (!val)
                        return "";
                    var tip = val.replace(/,/g, '<br />');
                    p.tdAttr = 'data-qtip="' + tip + '"';
                    var id = record.data.first_report_id;
                    icon = "";
                    if (record.data.first_report_path) {
                        icon += '<img src="<?php echo HOME_PATH; ?>/public/images/icons/download.png" onclick="download(' + id + ', \'物料清单\')" style="cursor:pointer;"></img>';
                    }
                    return icon + " " + val;
                }
            },
            {
                text: '备注',
                width: 180,
                dataIndex: 'remark',
                renderer: showTitle
            },
            {
                text: '审批完成时间',
                width: 120,
                dataIndex: 'archive_time',
                renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s')
            },
            {
                text: '申请人',
                width: 80,
                dataIndex: 'creater'
            },
            {
                text: '申请时间',
                width: 120,
                dataIndex: 'create_time',
                renderer: Ext.util.Format.dateRenderer('Y-m-d H:i:s')
            },
            {
                text: '审批记录',
                width: 180,
                dataIndex: 'record',
                renderer: showTitle
            }
        ],
        listeners: {
            itemdblclick: function (grid) {
                //                viewAction(grid);
            }
        },
        bbar: Ext.create('Ext.PagingToolbar', {
            store: store,
            displayInfo: true,
            displayMsg: '显示 {0} - {1} 共 {2}',
            emptyMsg: "没有数据",
            items: [
                {
                    xtype: 'numberfield',
                    id: 'page_size_set',
                    value: 50,
                    width: 150,
                    hideTrigger: true,
                    labelAlign: 'right',
                    fieldLabel: '每页显示',
                    listeners: {
                        specialKey: function (field, e) {
                            if (e.getKey() == Ext.EventObject.ENTER) {
                                var thisStore = this.up('pagingtoolbar').getStore();
                                thisStore.pageSize = Ext.getCmp('page_size_set').getValue();
                                thisStore.loadPage(1);
                            }
                        }
                    }
                }
            ]
        })
    });

    store.on("beforeload", function () {
        var search_tag = Ext.getCmp('search_tag').getValue();
        var search_type = Ext.getCmp('search_type').getValue();
        var search_state = Ext.getCmp('search_state').getValue();
        var search_archive_date_from = Ext.getCmp('search_archive_date_from').getValue();
        var search_archive_date_to = Ext.getCmp('search_archive_date_to').getValue();
        Ext.apply(store.proxy.extraParams, {
            search_type: search_type,
            search_tag: search_tag,
            search_state: search_state,
            search_archive_date_from: search_archive_date_from,
            search_archive_date_to: search_archive_date_to
        });
    });

    Ext.create('Ext.container.Viewport', {
        layout: 'border',
        border: 0,
        rtl: true,
        items: [
            {
                region: 'center',
                border: 0,
                layout: 'fit',
                plain: true,
                items: [grid]
            }
        ]
    });
});
</script>
</head>
<body>
<link
    href="<?php echo HOME_PATH ?>/public/js/uploadify/css/uploadify.css"
    rel="stylesheet" type="text/css" media="screen" />

<script
    src="<?php echo HOME_PATH ?>/public/js/uploadify/scripts/jquery.uploadify.min.js"></script>
<script
    src="<?php echo HOME_PATH ?>/public/js/uploadify/scripts/swfobject.js"></script>

</body>
</html>